import{_ as e,c as t,o,a3 as d}from"./chunks/framework.Bp5TMMxn.js";const u=JSON.parse('{"title":"Piral Feed Service","description":"","frontmatter":{},"headers":[],"relativePath":"api/discovery/piral-feed-service.md","filePath":"api/discovery/piral-feed-service.md","lastUpdated":1722436261000}'),r={name:"api/discovery/piral-feed-service.md"},i=d('<h1 id="piral-feed-service" tabindex="-1">Piral Feed Service <a class="header-anchor" href="#piral-feed-service" aria-label="Permalink to &quot;Piral Feed Service&quot;">​</a></h1><p>Discovery service responses following <a href="https://docs.piral.io/reference/specifications/feed-api-specification" target="_blank" rel="noreferrer">the Piral Feed Service specification</a> are directly supported.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can get access to a <em>free</em> (for personal and non-production payloads) discovery service at <a href="https://feed.piral.cloud" target="_blank" rel="noreferrer">feed.piral.cloud</a>. If you like to use this on-premise you can even get a licensed version with support. For more information, see <a href="https://www.piral.cloud" target="_blank" rel="noreferrer">www.piral.cloud</a>.</p><p>This document describes the <em>default</em> response from the Piral Cloud Feed Service - following the <a href="https://docs.piral.io/reference/specifications/feed-api-specification" target="_blank" rel="noreferrer">specification</a>. Note, that the Piral Cloud Feed Service also supports providing responses in other formats, such as <a href="./discovery-schema">the discovery schema</a>.</p></div><h2 id="schema-description" tabindex="-1">Schema Description <a class="header-anchor" href="#schema-description" aria-label="Permalink to &quot;Schema Description&quot;">​</a></h2><p>The returned response has either to be an array consisting of objects following the schema (i.e., they need to have a <code>name</code>, <code>version</code>, <code>spec</code> and <code>link</code> property), or must be an object with an <code>items</code> property that is an array with the previously mentioned array items.</p><p>While pilets are directly supported, other micro frontends such as Module Federation or Native Federation powered micro frontends are covered with a special property called <code>custom</code>.</p><h2 id="mapping-of-properties" tabindex="-1">Mapping of Properties <a class="header-anchor" href="#mapping-of-properties" aria-label="Permalink to &quot;Mapping of Properties&quot;">​</a></h2><h3 id="module-federation" tabindex="-1">Module Federation <a class="header-anchor" href="#module-federation" aria-label="Permalink to &quot;Module Federation&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td>Name of the micro frontend</td></tr><tr><td><code>spec</code></td><td>Needs to be set to <code>mf</code></td></tr><tr><td><code>link</code></td><td>Link to the remote entry (manifest or JS)</td></tr><tr><td><code>custom.id</code></td><td>The global name of the remote</td></tr><tr><td><code>custom.metaData</code></td><td>The <code>metaData</code> section of the remote entry manifest</td></tr><tr><td><code>custom.exposes</code></td><td>The <code>exposes</code> section of the remote entry manifest</td></tr><tr><td><code>custom.remotes</code></td><td>The <code>remotes</code> section of the remote entry manifest</td></tr><tr><td><code>custom.shared</code></td><td>The <code>shared</code> section of the remote entry manifest</td></tr><tr><td><code>custom.runtime</code></td><td>The MF runtime version (e.g., <code>1.0</code> or <code>2.0</code>)</td></tr><tr><td><code>custom.type</code></td><td>The type (<code>esm</code> / <code>module</code> or <code>var</code> / <code>global</code>)</td></tr></tbody></table><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>It is crucial that the right runtime version of Module Federation is transported. While a missing <code>runtime</code> value could still be inferred correctly, an incorrect one will almost certainly lead to a wrong interpretation of the micro frontend.</p></div><h3 id="native-federation" tabindex="-1">Native Federation <a class="header-anchor" href="#native-federation" aria-label="Permalink to &quot;Native Federation&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td>Name of the micro frontend</td></tr><tr><td><code>spec</code></td><td>Needs to be set to <code>nf</code></td></tr><tr><td><code>link</code></td><td>Link to the JSON definition</td></tr><tr><td><code>custom.exposes</code></td><td>The <code>exposes</code> section of JSON definition</td></tr><tr><td><code>custom.dependencies</code></td><td>The <code>dependencies</code> section of the JSON definition</td></tr></tbody></table><h3 id="pilets" tabindex="-1">Pilets <a class="header-anchor" href="#pilets" aria-label="Permalink to &quot;Pilets&quot;">​</a></h3><table><thead><tr><th>Property</th><th>Description</th></tr></thead><tbody><tr><td><code>name</code></td><td>Name of the micro frontend</td></tr><tr><td><code>version</code></td><td>The version of the micro frontend</td></tr><tr><td><code>link</code></td><td>The URL of the entry module</td></tr><tr><td><code>dependencies</code></td><td>The <code>dependencies</code> section of pilet</td></tr><tr><td><code>config</code></td><td>The <code>config</code> section of pilet</td></tr><tr><td><code>spec</code></td><td>The <code>spec</code> section of the pilet</td></tr><tr><td><code>integrity</code></td><td>The <code>integrity</code> section of the pilet</td></tr></tbody></table><h3 id="anything-else" tabindex="-1">Anything Else <a class="header-anchor" href="#anything-else" aria-label="Permalink to &quot;Anything Else&quot;">​</a></h3><p><strong>This is not supported</strong> (right now).</p><p>All values in the discovery schema are interepreted as one of the previously three mentioned formats. If you know another format that can be / is transported commonly then let us know!</p>',17),a=[i];function c(s,n,l,h,p,f){return o(),t("div",null,a)}const y=e(r,[["render",c]]);export{u as __pageData,y as default};
